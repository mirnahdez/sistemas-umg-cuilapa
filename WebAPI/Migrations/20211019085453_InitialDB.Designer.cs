// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Contexts;

namespace WebAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20211019085453_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Entities.Auxiliar", b =>
                {
                    b.Property<int>("AuxiliarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CentroUniversitarioCentroUId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("AuxiliarId");

                    b.HasIndex("CentroUniversitarioCentroUId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Auxiliar");
                });

            modelBuilder.Entity("WebAPI.Entities.Carrera", b =>
                {
                    b.Property<int>("CarreraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CarreraId");

                    b.HasIndex("FacultadId");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("WebAPI.Entities.Catedratico", b =>
                {
                    b.Property<int>("CatedraticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CatedraticoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Catedratico");
                });

            modelBuilder.Entity("WebAPI.Entities.CatedraticoCurso", b =>
                {
                    b.Property<int>("CatedraticoCursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatedraticoId")
                        .HasColumnType("int");

                    b.Property<int?>("CursoId")
                        .HasColumnType("int");

                    b.HasKey("CatedraticoCursoId");

                    b.HasIndex("CatedraticoId");

                    b.HasIndex("CursoId");

                    b.ToTable("CatedraticoCurso");
                });

            modelBuilder.Entity("WebAPI.Entities.CentroU", b =>
                {
                    b.Property<int>("CentroUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CentroUId");

                    b.ToTable("CentroU");
                });

            modelBuilder.Entity("WebAPI.Entities.CentroUCarrera", b =>
                {
                    b.Property<int>("CentroUCarreraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarreraId")
                        .HasColumnType("int");

                    b.Property<int?>("CentroUniversitarioCentroUId")
                        .HasColumnType("int");

                    b.HasKey("CentroUCarreraId");

                    b.HasIndex("CarreraId");

                    b.HasIndex("CentroUniversitarioCentroUId");

                    b.ToTable("CentroUCarrera");
                });

            modelBuilder.Entity("WebAPI.Entities.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CursoId");

                    b.HasIndex("CarreraId");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("WebAPI.Entities.Enlace", b =>
                {
                    b.Property<int>("EnlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("EnlaceId");

                    b.HasIndex("PublicacionId");

                    b.ToTable("Enlace");
                });

            modelBuilder.Entity("WebAPI.Entities.Estudiante", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("EstudianteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("WebAPI.Entities.EstudianteCurso", b =>
                {
                    b.Property<int>("EstudianteCursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CursoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.HasKey("EstudianteCursoId");

                    b.HasIndex("CursoId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("EstudianteCurso");
                });

            modelBuilder.Entity("WebAPI.Entities.Facultad", b =>
                {
                    b.Property<int>("FacultadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FacultadId");

                    b.ToTable("Facultad");
                });

            modelBuilder.Entity("WebAPI.Entities.FacultadCentroU", b =>
                {
                    b.Property<int>("FacultadCentroUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CentroUniversitarioCentroUId")
                        .HasColumnType("int");

                    b.Property<int?>("FacultadId")
                        .HasColumnType("int");

                    b.HasKey("FacultadCentroUId");

                    b.HasIndex("CentroUniversitarioCentroUId");

                    b.HasIndex("FacultadId");

                    b.ToTable("FacultadCentroU");
                });

            modelBuilder.Entity("WebAPI.Entities.GestorContenido", b =>
                {
                    b.Property<int>("GestorContenidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("FacultadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("GestorContenidoId");

                    b.HasIndex("FacultadId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GestorContenido");
                });

            modelBuilder.Entity("WebAPI.Entities.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("int");

                    b.Property<string>("Src")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ImagenId");

                    b.HasIndex("PublicacionId");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("WebAPI.Entities.Publicacion", b =>
                {
                    b.Property<int>("PublicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PublicacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Publicacion");
                });

            modelBuilder.Entity("WebAPI.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.Auxiliar", b =>
                {
                    b.HasOne("WebAPI.Entities.CentroU", "CentroUniversitario")
                        .WithMany()
                        .HasForeignKey("CentroUniversitarioCentroUId");

                    b.HasOne("WebAPI.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("CentroUniversitario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.Carrera", b =>
                {
                    b.HasOne("WebAPI.Entities.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId");

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("WebAPI.Entities.Catedratico", b =>
                {
                    b.HasOne("WebAPI.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.CatedraticoCurso", b =>
                {
                    b.HasOne("WebAPI.Entities.Catedratico", "Catedratico")
                        .WithMany()
                        .HasForeignKey("CatedraticoId");

                    b.HasOne("WebAPI.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId");

                    b.Navigation("Catedratico");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("WebAPI.Entities.CentroUCarrera", b =>
                {
                    b.HasOne("WebAPI.Entities.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId");

                    b.HasOne("WebAPI.Entities.CentroU", "CentroUniversitario")
                        .WithMany()
                        .HasForeignKey("CentroUniversitarioCentroUId");

                    b.Navigation("Carrera");

                    b.Navigation("CentroUniversitario");
                });

            modelBuilder.Entity("WebAPI.Entities.Curso", b =>
                {
                    b.HasOne("WebAPI.Entities.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("WebAPI.Entities.Enlace", b =>
                {
                    b.HasOne("WebAPI.Entities.Publicacion", null)
                        .WithMany("Enlaces")
                        .HasForeignKey("PublicacionId");
                });

            modelBuilder.Entity("WebAPI.Entities.Estudiante", b =>
                {
                    b.HasOne("WebAPI.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.EstudianteCurso", b =>
                {
                    b.HasOne("WebAPI.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId");

                    b.HasOne("WebAPI.Entities.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteId");

                    b.Navigation("Curso");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("WebAPI.Entities.FacultadCentroU", b =>
                {
                    b.HasOne("WebAPI.Entities.CentroU", "CentroUniversitario")
                        .WithMany()
                        .HasForeignKey("CentroUniversitarioCentroUId");

                    b.HasOne("WebAPI.Entities.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId");

                    b.Navigation("CentroUniversitario");

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("WebAPI.Entities.GestorContenido", b =>
                {
                    b.HasOne("WebAPI.Entities.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId");

                    b.HasOne("WebAPI.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Facultad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.Imagen", b =>
                {
                    b.HasOne("WebAPI.Entities.Publicacion", null)
                        .WithMany("Imagenes")
                        .HasForeignKey("PublicacionId");
                });

            modelBuilder.Entity("WebAPI.Entities.Publicacion", b =>
                {
                    b.HasOne("WebAPI.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.Publicacion", b =>
                {
                    b.Navigation("Enlaces");

                    b.Navigation("Imagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
